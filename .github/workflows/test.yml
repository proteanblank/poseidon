name: test

on: [push, pull_request]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: shell_test
      run: |
        wget "https://github.com/koalaman/shellcheck/releases/download/stable/shellcheck-stable.linux.x86_64.tar.xz" && \
        tar --xz -xvf "shellcheck-stable.linux.x86_64.tar.xz" && \
        shellcheck() { "shellcheck-stable/shellcheck" "$@"; } && \
        shellcheck --version && \
        /bin/bash --version && /bin/bash -n bin/poseidon && shellcheck -x -e SC2016 -e SC2119 -e SC2129 -e SC2001 -e SC2038 -e SC2044 bin/poseidon
    - name: unit_test
      run: |
        export DEBIAN_FRONTEND=noninteractive && \
        echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections
        export PYTHONPATH=$PWD/poseidon:$PYTHONPATH
        export POSEIDON_CONFIG=$PWD/config/poseidon.config
        sudo apt-get update && \
        sudo apt-get install -yq --no-install-recommends python3.8 python3.8-dev && \
        sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3 && \
        sudo apt-get install tshark wget jq tcpreplay && \
        pip3 install -U setuptools pybind11 && \
        pip3 install codecov scikit-build docker-compose && \
        find . -name requirements.txt -type f -exec pip3 install -r {} \; && \
        find . -name test-requirements.txt -type f -exec pip3 install -r {} \; && \
        cd src/core && sudo python3 setup.py sdist install && cd ../../ && \
        cd src/cli && sudo python3 setup.py sdist install && cd ../../ && \
        cd src/api && sudo python3 setup.py sdist install && cd ../../ && \
        PATH=/home/runner/.local/bin:$PATH py.test -v -vv --cov-report term-missing --cov=. --cov=poseidon_core --cov=poseidon_api --cov=poseidon_cli -c .coveragerc && \
        PATH=/home/runner/.local/bin:$PATH coverage report && \
        PATH=/home/runner/.local/bin:$PATH coverage xml
    - name: docker_test
      run: make run_tests
    - name: e2e_test
      run: |
        docker system prune -a -f && ./tests/test_e2e.sh
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.5.0
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
      if: github.repository == 'iqtlabs/poseidon'
